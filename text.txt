const hours = new Date().getHours();
//이 줄은 지금 몇 시인지를 알려줍니다. 예를 들어, 오전 10시라면 10이 됩니다.



const validTimes = [2, 5, 8, 11, 14, 17, 20, 23]; // set time zone
//여기는 우리가 날씨 정보를 볼 수 있는 시간을 모아 둔 목록입니다. 하루에 8번, 특정한 시간에만 날씨를 확인할 수 있어요.



const closestPastTime = validTimes
    .slice()
    .reverse()
    .find((time) => hours >= time);
    
//이 부분은 조금 복잡해 보일 수 있는데요, 여기서 하는 일은 지금 시간보다 이전에 있는, 날씨 정보를 볼 수 있는 시간 중에서 가장 가까운 시간을 찾는 거예요. 예를 들어 지금이 오전 10시라면, 가장 가까운 과거의 시간은 오전 8시가 됩니다.
slice()는 목록을 그대로 복사해요.
reverse()는 목록의 순서를 뒤집어요, 그래서 뒤에서부터 찾기 시작해요.
find((time) => hours >= time)는 지금 시간(예: 10시)보다 같거나 작은 시간을 목록에서 찾아요.

return closestPastTime !== undefined ? `0${closestPastTime}`.slice(-2) + "00" : "2300";
//지막 줄은 찾은 시간을 다듬어 만들어서 돌려줘요. 만약 오전 8시를 찾았다면, "0800"이라고 보여줘요. 여기서 0${closestPastTime}.slice(-2)`는 시간이 한 자리 숫자일 때(예: 2시) 앞에 0을 붙여서 두 자리로 만들어요. 그리고 뒤에 "00"을 붙여서 완전한 시간 형태로 만들어요.
만약 찾을 수 있는 시간이 없다면, "2300"이라고 반환해요. 이건 마지막으로 날씨 정보를 볼 수 있는 시간이 밤 11시라는 뜻이에요.
